<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

        <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:dbsettings.properties</value>
            </list>
        </property>
    </bean>

    <!--<bean id="propertiesLocation" class="java.lang.String">-->
    	<!--<constructor-arg value="dbsettings.properties"/>-->
    <!--</bean>-->

    <bean name="dataSource"
          class="org.apache.commons.dbcp.datasources.SharedPoolDataSource"
          destroy-method="close">
        <property name="connectionPoolDataSource">
            <bean
                    class="org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS">
                <property name="driver" value="${hibernate.connection.driver_class}" />
                <property name="url"  value="${hibernate.connection.url}" />
                <property name="user" value="${hibernate.connection.username}" />
                <property name="password" value="${hibernate.connection.password}" />
                <property name="maxActive" value="0" />
                <property name="maxIdle" value="0" />
                <property name="poolPreparedStatements" value="true" />
            </bean>
        </property>
        <property name="maxWait" value="60000" />
        <property name="defaultTransactionIsolation" value="1" />
        <property name="defaultReadOnly" value="false" />
    </bean>

    <!--

    TODO: For JNDI stuff lateron

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="${datasource.name}" />
		<property name="resourceRef" value="true"/>
	</bean>
     -->

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="persistence-ORGTOOL" />
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean
                    class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="databasePlatform" value="${hibernate.dialect}" />
                <property name="generateDdl" value="true" />
                <property name="showSql" value="${hibernate.showSQL}" />
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean
            class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor">
        <description>
            Needed so the @PersistenceContext annotation is
            recognized.
        </description>
    </bean>

    <bean
            class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor">
        <description>
            Translates native data exceptions to Spring's
            DataAccessException class.
        </description>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <property name="scopes">
            <map>
                <entry key="view">
                    <bean class="be.e2partners.util.ViewScope"/>
                </entry>
            </map>
        </property>
    </bean>


    <tx:annotation-driven />

    <context:component-scan base-package="be.e2partners" />


    <context:annotation-config />

</beans>